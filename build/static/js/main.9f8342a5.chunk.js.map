{"version":3,"sources":["game.js","menu.js","index.js"],"names":["pixel","x","y","oldX","oldY","timeout","this","ox","oy","tm","i","MainCanvas","props","once","bucketDoing","choosenColor","t0","performance","now","t1","stack","offset","pos","drawWrapper","handlePlayerDrawing","bind","setPositionWrapper","setPosition","width","height","timeoutInterval","setInterval","tX","SEND_DATA_EVERY_X_MILISECONDS","mouse","clientX","clientY","arr","color","array","isSameColor","fillIt","setTimeout","console","log","imgData","ctx","getImageData","pixels","data","putImageData","instructionArray","index","beginPath","lineWidth","lineCap","strokeStyle","moveTo","lineTo","stroke","calculateTimeout","buttons","blocked","bucket","min","max","val","oldpos","Math","floor","push","prevProps","prevState","snapshot","mouseMoveEvent","document","addEventListener","mouseDownEvent","mouseEnterEvent","canvasRef","offsetLeft","offsetTop","getContext","remove","clearInterval","id","ref","React","Component","InstructionArray","GameSocket","parent","URL","networkInstructions","gameMessageInstructions","networkInstruction","interval","handleInstructionTimeout","rushMode","next","handleInstructionArray","length","clearTimeout","urlParams","URLSearchParams","window","location","search","socket","socketIOClient","reconnect","query","get","on","rush","d","Date","toISOString","substring","replace","names","join","emit","Game","roomName","state","playerTurn","setState","gameServerInstruction","drawPixel","messageServerInstruction","handleNewPlayerTurn","setupSocket","className","type","onClick","AWS_URL","Menu","joinRoomText","newRoomText","result","success","history","alert","error","fetch","mode","then","res","json","newRoomCallback","joinRoomCallback","class","placeholder","onChange","value","target","name","newRoom","joinRoom","App","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9f8342a5.chunk.js","sourcesContent":["import React, {createRef} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport socketIOClient from \"socket.io-client\";\r\nconst AWS_URL = \"http://appskr-env.eba-ufuzuuq8.us-east-1.elasticbeanstalk.com\";\r\nconst NO_RUSH = false;\r\nconst RUSH = true;\r\nconst SEND_DATA_EVERY_X_MILISECONDS = 1000;\r\nconst DRAW_PIXEL = 0;\r\nconst BUCKET = 1;\r\n\r\n\r\nconst clamp = (min, max, val) => Math.min(Math.max(min, val), max);\r\n\r\nconst log = (...names) =>\r\n{\r\n    let d = new Date().toISOString().substring(0,19).replace(\"T\",\" \")\r\n\r\n    console.log(d + \" : \" + names.join(\"\"));\r\n};\r\n\r\nclass pixel {\r\n    constructor(x, y, oldX, oldY, timeout) {\r\n        this.ox = oldX;\r\n        this.oy = oldY;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.tm = timeout;\r\n        this.i = DRAW_PIXEL;//INSTRUCTION\r\n    }\r\n}\r\n\r\nclass bucket {\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.i = BUCKET;\r\n    }\r\n}\r\n\r\n\r\nclass MainCanvas extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.once = false;\r\n        this.bucketDoing = false;\r\n        this.choosenColor = [0, 0, 0]\r\n        this.t0 = performance.now();\r\n        this.t1 = 0;\r\n        this.stack = 0;\r\n        this.offset = {x: 0, y: 0};\r\n        this.pos = {x: 0, y: 0};\r\n        this.drawWrapper = this.handlePlayerDrawing.bind(this);\r\n        this.setPositionWrapper = this.setPosition.bind(this);\r\n        this.width = 800;\r\n        this.height = 600;\r\n        this.timeoutInterval =  setInterval(() => {\r\n\r\n            // Reset the timer if the user don't draw for a long time\r\n            const tX = performance.now();\r\n\r\n            if (tX - this.t0 >= SEND_DATA_EVERY_X_MILISECONDS / 5) {\r\n                this.t0 = tX;\r\n            }\r\n        }, SEND_DATA_EVERY_X_MILISECONDS / 5);\r\n    }\r\n\r\n    setPosition(mouse) {\r\n        this.pos.x = mouse.clientX - this.offset.x;\r\n        this.pos.y = mouse.clientY - this.offset.y;\r\n    }\r\n\r\n    isSameColor(arr, x, y, color)\r\n    {\r\n        //console.log(\"color \", arr[x * y * 4 + 3] !== 0);\r\n        return (arr[(y * this.width + x) * 4 + 3] !== 0);\r\n    }\r\n\r\n    fillIt(array, x, y)\r\n    {\r\n\r\n\r\n       /* this.stack += 1;\r\n        if (this.stack >= 5000)\r\n            return;*/\r\n        /*if (this.once === false && this.stack >= 5000) {\r\n            this.once = true;\r\n            this.ctx.putImageData(imgData, 0, 0);\r\n        }*/\r\n        //console.log(\"ok : \", x, y, this.stack);\r\n        if (this.isSameColor(array, x, y, this.choosenColor)) {\r\n            this.stack -= 1;\r\n            return;\r\n        }\r\n       /* array[x * y * 4] = this.choosenColor[0];\r\n        array[x * y * 4 + 1] = this.choosenColor[1];\r\n        array[x * y * 4 + 2] = this.choosenColor[2];*/\r\n        array[ (y * this.width + x) * 4 + 3] = 255;\r\n        if (x + 1 < 800)\r\n            this.fillIt(array, x + 1, y);\r\n        if (y + 1 < 600)\r\n            this.fillIt(array, x, y + 1);\r\n        if (x - 1 >= 0)\r\n            this.fillIt(array, x - 1, y);\r\n        if (y - 1 >= 0)\r\n            this.fillIt(array, x, y - 1);\r\n        this.stack -= 1;\r\n    }\r\n // 461 456\r\n    bucket(x, y) {\r\n\r\n        if (this.bucketDoing)\r\n            return;\r\n        this.bucketDoing = true;\r\n        setTimeout(() => {this.bucketDoing = false}, 10000);\r\n        console.log(\"BUCKET CALL!\");\r\n        let imgData = this.ctx.getImageData(0, 0, 800, 600);\r\n        let pixels = imgData.data;\r\n\r\n\r\n        console.log(pixels);\r\n        this.fillIt(pixels, x, y);\r\n        this.ctx.putImageData(imgData, 0, 0);\r\n        console.log(\"endend...\", this.stack);\r\n    }\r\n\r\n\r\n    drawPixel()\r\n    {\r\n        const pixel = this.props.instructionArray.array[this.props.instructionArray.index];\r\n\r\n        this.ctx.beginPath(); // begin\r\n        this.ctx.lineWidth = 4;\r\n        this.ctx.lineCap = 'round';\r\n        this.ctx.strokeStyle = '#c0392b';\r\n        this.ctx.moveTo(pixel.ox, pixel.oy); // from\r\n        this.ctx.lineTo(pixel.x, pixel.y); // to\r\n        this.ctx.stroke(); // draw it!\r\n    }\r\n\r\n    handlePlayerDrawing(mouse)\r\n    {\r\n\r\n        let calculateTimeout = 0;\r\n\r\n        if (mouse.buttons !== 1)\r\n            return;\r\n        if (this.props.blocked !== true) {\r\n            this.setPosition(mouse);\r\n            return (this.bucket(this.pos.x, this.pos.y));\r\n        }\r\n        this.ctx.beginPath(); // begin\r\n        const oldpos = {x: this.pos.x, y: this.pos.y};\r\n        this.ctx.moveTo(this.pos.x, this.pos.y); // from\r\n        this.setPosition(mouse);\r\n        this.ctx.lineTo(this.pos.x, this.pos.y); // to\r\n\r\n\r\n        this.ctx.stroke(); // draw it!\r\n        this.t1 = performance.now();\r\n        console.log(this.t1 - this.t0);\r\n\r\n        calculateTimeout = clamp(0, SEND_DATA_EVERY_X_MILISECONDS, Math.floor(this.t1 - this.t0)); // Get the difference between previous click time and actual click time, floor it and then clamp it between 0 and SEND_DATA_EVERY_X_MILISECONDS\r\n        this.props.instructionArray.array.push(new pixel(this.pos.x, this.pos.y, oldpos.x, oldpos.y, calculateTimeout));\r\n        this.t0 = this.t1;\r\n        const imgData = this.ctx.getImageData(0, 0, 800, 600);\r\n        const pixels = imgData.data;\r\n        console.log(pixels);\r\n\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log(\"UP \", this.props.blocked)\r\n        //if (this.props.blocked !== true) {\r\n            this.mouseMoveEvent = document.addEventListener('mousemove', this.drawWrapper);\r\n            this.mouseDownEvent = document.addEventListener('mousedown', this.setPositionWrapper);\r\n            this.mouseEnterEvent = document.addEventListener('mouseenter', this.setPositionWrapper);\r\n        //}\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.offset = {x: this.canvasRef.offsetLeft , y: this.canvasRef.offsetTop};\r\n        this.ctx = this.canvasRef.getContext(\"2d\");\r\n        this.ctx.strokeStyle = '#000000';\r\n        console.log(\"didmount\");\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mouseDownEvent.remove();\r\n        this.mouseEnterEvent.remove();\r\n        this.mouseMoveEvent.remove();\r\n        clearInterval(this.timeoutInterval);\r\n        console.log(\"unmount\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <canvas id=\"myCanvas\" width=\"800\" height=\"600\" ref={ref => {\r\n            console.log(\"REF BRO: \", ref);\r\n            this.canvasRef = ref;\r\n            console.log(\"af \", this.canvasRef);\r\n\r\n        }}>\r\n            Désolé, votre navigateur ne prend pas en charge &lt;canvas&gt;.\r\n        </canvas>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass InstructionArray {\r\n    constructor()\r\n    {\r\n        this.array = [];\r\n        this.index = 0;\r\n    }\r\n}\r\n\r\n\r\nclass GameSocket\r\n{\r\n    constructor(parent, URL, instructionArray, networkInstructions, gameMessageInstructions)\r\n    {\r\n        this.gameMessageInstructions = gameMessageInstructions;\r\n        this.instructionArray = instructionArray;\r\n        this.networkInstruction = networkInstructions;\r\n        this.interval = null;\r\n        this.handleInstructionTimeout = null;\r\n        this.parent = parent;\r\n        this.URL = URL;\r\n    }\r\n\r\n    handleInstructionArray(rushMode)\r\n    {\r\n        const next = rushMode === RUSH ? null : this.handleInstructionArray.bind(this);\r\n\r\n        if (this.instructionArray.index >= this.instructionArray.array.length) {\r\n            this.instructionArray.index = 0;\r\n            this.instructionArray.array = null;\r\n            return;\r\n        }\r\n        this.networkInstruction[this.instructionArray.array[this.instructionArray.index].i](this.instructionArray);\r\n        this.instructionArray.index += 1;\r\n        if (next) {\r\n            this.handleInstructionTimeout = setTimeout(next, this.instructionArray.array[this.instructionArray.index - 1].tm);\r\n        }\r\n    }\r\n\r\n\r\n    // This function is called if the instruction array is not finished yet, it will rush it and ignore timeouts\r\n    // (it will execute all the instructions directly, without considering how much time the user took to make it)\r\n    // And then clean the array\r\n    rush()\r\n    {\r\n        if (this.handleInstructionTimeout) {\r\n            clearTimeout(this.handleInstructionTimeout);\r\n        }\r\n\r\n        for (; this.instructionArray.index < this.instructionArray.array.length; this.instructionArray.index++) {\r\n            this.networkInstruction[this.instructionArray.array[this.instructionArray.index].i](this.instructionArray);\r\n        }\r\n        this.instructionArray.array =  [];\r\n        this.instructionArray.index = 0;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.handleInstructionTimeout);\r\n    }\r\n\r\n    setupSocket()\r\n    {\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n\r\n        this.socket = socketIOClient(this.URL, {reconnect: true, query: `roomName=${urlParams.get(\"roomName\")}`});\r\n        this.socket.on(\"gameData\", (data) => {\r\n\r\n            if (this.gameMessageInstructions[\"gameData\"]) {\r\n                this.gameMessageInstructions[\"gameData\"]();\r\n            }\r\n            if (this.instructionArray.array != null) {\r\n                this.rush(this.instructionArray);\r\n            }\r\n\r\n           console.log(\"Je recois -> \", data);\r\n            this.instructionArray.array = data;\r\n            this.instructionArray.index = 0;\r\n            this.handleInstructionArray(NO_RUSH);\r\n        });\r\n\r\n        this.socket.on(\"newPlayerTurn\", () =>  {\r\n            if (this.gameMessageInstructions[\"newPlayerTurn\"]) {\r\n                this.gameMessageInstructions[\"newPlayerTurn\"]();\r\n            }\r\n                log(\"LETS GO!\");\r\n                this.interval = setInterval(() => {\r\n                    console.log(\" interval  data \", this.instructionArray);\r\n                    if (this.instructionArray.array.length > 2) {\r\n                        this.socket.emit(\"gameData\", this.instructionArray.array);\r\n                        this.instructionArray.array = [];\r\n                        this.instructionArray.index = 0;\r\n                    }\r\n                }, SEND_DATA_EVERY_X_MILISECONDS);\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n// ========================================\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n\r\n        this.instructionArray = new InstructionArray();\r\n        this.roomName = urlParams.get(\"roomName\");\r\n        this.socket = null;\r\n        this.state = {\r\n            playerTurn: true,\r\n        };\r\n    }\r\n\r\n    handleNewPlayerTurn() {\r\n        this.setState({playerTurn: true});\r\n    }\r\n\r\n    handleNoAccessCanvas() {\r\n        if (this.state.playerTurn === false)\r\n            return;\r\n        this.setState({\r\n            playerTurn: false\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        this.gameServerInstruction = [this.canvasRef.drawPixel.bind(this.canvasRef)];\r\n        this.messageServerInstruction = {\"newPlayerTurn\": this.handleNewPlayerTurn.bind(this)};\r\n        if (!this.socket) {\r\n            this.socket = new GameSocket(this, AWS_URL, this.instructionArray, this.gameServerInstruction, this.messageServerInstruction);\r\n            this.socket.setupSocket();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return ([\r\n\r\n              <MainCanvas ref={ref => this.canvasRef = ref} blocked={this.state.playerTurn} instructionArray={this.instructionArray} />,\r\n                <button className=\"favorite styled\"\r\n                        type=\"button\"\r\n                        onClick={\r\n                            () =>\r\n                            {console.log(\"clicj\");\r\n                                this.setState({playerTurn: this.state.playerTurn === true ? false : true})}}>\r\n                    Add to favorites\r\n                </button>\r\n                ]\r\n        );\r\n    }\r\n}\r\n\r\nexport default Game\r\n\r\n/*\r\nReactDOM.render(\r\n    <Game/>,\r\n    document.getElementById('root')\r\n);\r\n */","import ReactDOM from \"react-dom\";\r\nimport React from \"react\"\r\nconst AWS_URL = \"http://appskr-env.eba-ufuzuuq8.us-east-1.elasticbeanstalk.com\";\r\n\r\nclass Menu extends React.Component\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            joinRoomText: \"\",\r\n            newRoomText: \"\",\r\n        };\r\n    }\r\n\r\n\r\n    newRoomCallback(result)\r\n    {\r\n        if (result.success === true) {\r\n            this.props.history.push(`/game?roomName=${result.roomName}`);\r\n        } else {\r\n            alert(`Something went wrong : ${result.error}`)\r\n        }\r\n    }\r\n\r\n    joinRoomCallback(result)\r\n    {\r\n        console.log(\"res \", result);\r\n        if (result.success === true) {\r\n            this.props.history.push(`/game?roomName=${result.roomName}`);\r\n        } else {\r\n            alert(`Something went wrong : ${result.error}`)\r\n        }\r\n    }\r\n\r\n    newRoom ()\r\n    {\r\n\r\n        if (this.state.newRoomText.length === 0) {\r\n            alert(\"Please enter a roomName\");\r\n            return;\r\n        }\r\n\r\n        fetch(`${AWS_URL}/newroom/${this.state.newRoomText}/`, {mode: 'no-cors'})\r\n            .then(res => res.json())\r\n            .then(this.newRoomCallback.bind(this));\r\n    };\r\n\r\n    joinRoom()\r\n    {\r\n        console.log(\"lol\");\r\n        if (this.state.joinRoomText.length === 0) {\r\n            alert(\"Please enter a roomName\");\r\n            return;\r\n        }\r\n\r\n        fetch(`${AWS_URL}/joinroom/${this.state.joinRoomText}/`, {mode: 'no-cors'})\r\n            .then((res) => {\r\n                console.log(res);\r\n                return (res.json())\r\n            })\r\n            .then(this.joinRoomCallback.bind(this));\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const elements = (\r\n\r\n            <div>\r\n\r\n            <input class=\"myButton\" placeholder=\"Enter new room name name\" onChange={(value) => this.setState({newRoomText: value.target.value})} />\r\n            <input name=\"Submit\"  type=\"submit\" onClick={this.newRoom.bind(this)} />\r\n\r\n\r\n\r\n        <input class=\"myButton\" id=\"joinRoomName\" placeholder=\"Enter existing room name\" onChange={(value) => this.setState({joinRoomText: value.target.value})} />\r\n            <input name=\"Submit\"  type=\"submit\" onClick={this.joinRoom.bind(this)} />\r\n            </div>\r\n\r\n    );\r\n        return (\r\n            elements\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default Menu\r\n\r\n/*\r\nReactDOM.render(\r\n    <Menu/>,\r\n    document.getElementById('root')\r\n);\r\n\r\n */","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {render} from \"react-dom\";\r\nimport {BrowserRouter as Router, Route, Switch, Miss} from \"react-router-dom\";\r\nimport Game from \"./game\"\r\n\r\nimport Menu from \"./menu\";\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path={\"/\"} component={Menu}/>\r\n                <Route path={\"/game\"}><Game /></Route>\r\n             </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\nexport default App;"],"sourceRoot":""}